project_name: eltako-to-mqtt-gw
version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: eltako-to-mqtt-gw
    main: ./main.go
    binary: eltako-to-mqtt-gw
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0

dockers:
  - image_templates:
      - "pharndt/eltakomqtt:{{ .Tag }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=BINARY=eltako-to-mqtt-gw_linux_amd64_v1"
    skip_push: false

  - image_templates:
      - "pharndt/eltakomqtt:{{ .Tag }}-arm64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--build-arg=BINARY=eltako-to-mqtt-gw_linux_arm64"
    skip_push: false

docker_manifests:
  - id: tag
    name_template: "pharndt/eltakomqtt:{{ .Tag }}"
    image_templates:
      - pharndt/eltakomqtt:{{ .Tag }}-amd64
      - pharndt/eltakomqtt:{{ .Tag }}-arm64

  - id: latest
    name_template: "pharndt/eltakomqtt:latest"
    image_templates:
      - pharndt/eltakomqtt:{{ .Tag }}-amd64
      - pharndt/eltakomqtt:{{ .Tag }}-arm64

release:
  disable: false
  # Mode to release in. Valid options are:
  #   - auto: Auto detect the mode based on the git tag
  #   - keep-existing: Just upload the artifacts and keep the existing release
  #   - replace: Replace the existing release
  mode: replace
  draft: false
  prerelease: auto
  make_latest: true
  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base).
  extra_files:
    - glob: ../config-example.json
  # Release notes generation configuration.
  # This will create a .goreleaser.md file which you can then customize and
  # use for future releases
  notes:
    # Configure how the ChangeLog is generated.
    # https://goreleaser.com/customization/release/#creating-a-custom-release-notes
    #
    # Valid options are:
    # - default: Auto-generates the release notes with commits, contributors, and template processing
    # - keep-existing: Just upload the artifacts and keep the existing release notes
    group: milestone
    use: github-native
    filters:
      exclude:
        - '^docs:'
        - '^test:'
        - '^ci:'
        - Merge pull request
        - Merge branch
        - go mod tidy
